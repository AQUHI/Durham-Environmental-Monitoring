# name: Hot Durham Automated Data Pull

# # disabled
# # on:
# #   schedule:
# #     # Daily data pull at 6:00 AM UTC (high-resolution data collection)
# #     - cron: '0 6 * * *'
# #     # Monthly data pull - 1st of every month at 7:00 AM UTC
# #     - cron: '0 7 1 * *'
  
# #   # Allow manual triggering
# #   workflow_dispatch:
# #     inputs:
# #       pull_type:
# #         description: 'Type of data pull'
# #         required: true
# #         default: 'daily'
# #         type: choice
# #         options:
# #           - daily
# #           - weekly
# #           - monthly

# jobs:
#   data-pull:
#     runs-on: ubuntu-latest
#     permissions:
#       contents: 'write'
#       id-token: 'write'
    
#     steps:
#     - name: Checkout repository
#       uses: actions/checkout@v4
    
#     - name: Set up Python
#       uses: actions/setup-python@v4
#       with:
#         python-version: '3.11'
#         cache: 'pip'
    
#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip
#         if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
#     - name: Authenticate to Google Cloud
#       id: 'auth'
#       uses: 'google-github-actions/auth@v2'
#       with:
#         workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
#         service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

#     - name: Create logs directory
#       run: mkdir -p logs
    
#     - name: Determine pull type
#       id: pull-type
#       run: |
#         if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
#           echo "type=${{ github.event.inputs.pull_type }}" >> $GITHUB_OUTPUT
#         elif [ "${{ github.event.schedule }}" = "0 6 * * 1" ]; then
#           echo "type=weekly" >> $GITHUB_OUTPUT
#         elif [ "${{ github.event.schedule }}" = "30 6 * * 1" ]; then
#           # Check if it's an even week number for bi-weekly
#           week=$(date +%U)
#           if [ $((week % 2)) -eq 0 ]; then
#             echo "type=bi-weekly" >> $GITHUB_OUTPUT
#           else
#             echo "type=skip" >> $GITHUB_OUTPUT
#           fi
#         elif [ "${{ github.event.schedule }}" = "0 7 1 * *" ]; then
#           echo "type=monthly" >> $GITHUB_OUTPUT
#         else
#           echo "type=weekly" >> $GITHUB_OUTPUT
#         fi
    
#     - name: Run automated data pull
#       if: steps.pull-type.outputs.type != 'skip'
#       run: |
#         python scripts/automated_data_pull.py --${{ steps.pull-type.outputs.type }}
#       env:
#         PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
#         DB_CREDS_SECRET_ID: 'prod-db-credentials'
#         TSI_CREDS_SECRET_ID: 'tsi_creds'
#         WU_API_KEY_SECRET_ID: 'wu_api_key'
#         PYTHONPATH: ${{ github.workspace }}/src
    
#     - name: Upload logs as artifacts
#       if: always()
#       uses: actions/upload-artifact@v3
#       with:
#         name: data-pull-logs-${{ steps.pull-type.outputs.type }}-${{ github.run_number }}
#         path: logs/
#         retention-days: 30
    
#     - name: Commit and push updated data
#       if: steps.pull-type.outputs.type != 'skip'
#       run: |
#         git config --local user.email "action@github.com"
#         git config --local user.name "GitHub Action"
#         git add data/ raw_pulls/ logs/ || true
#         git diff --staged --quiet || git commit -m "Automated ${{ steps.pull-type.outputs.type }} data pull - $(date '+%Y-%m-%d %H:%M:%S')"
#         git push || true
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
