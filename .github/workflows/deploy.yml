name: Build and Deploy to Cloud Run

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: "durham-weather-466502"
  GAR_LOCATION: "us-east1"
  GAR_REPOSITORY: "weather-data-images"
  SERVICE_NAME: "weather-data-uploader"
  REGION: "us-east1"

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      id: auth
      uses: 'google-github-actions/auth@v2'
      with:
        workload_identity_provider: 'projects/441117079833/locations/global/workloadIdentityPools/github-pool/providers/github-provider'
        service_account: 'github-actions-deployer@durham-weather-466502.iam.gserviceaccount.com'

    - name: Set up Cloud SDK
      uses: 'google-github-actions/setup-gcloud@v2'

    - name: Create Artifact Registry repository
      run: |
        gcloud artifacts repositories create ${{ env.GAR_REPOSITORY }} \
          --repository-format=docker \
          --location=${{ env.GAR_LOCATION }} \
          --description="Docker repository for weather data images" \
          --project=${{ env.PROJECT_ID }} || true

    - name: Configure Docker
      run: gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev

    - name: Build Docker image
      run: |
        docker build --tag "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/${{ env.SERVICE_NAME }}:${{ github.sha }}" .

    - name: Push Docker image to Artifact Registry
      run: |
        docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/${{ env.SERVICE_NAME }}:${{ github.sha }}"

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy ${{ env.SERVICE_NAME }} \
          --image "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/${{ env.SERVICE_NAME }}:${{ github.sha }}" \
          --region ${{ env.REGION }} \
          --platform "managed" \
          --set-env-vars="PROJECT_ID=${{ env.PROJECT_ID }},DB_CREDS_SECRET_ID=prod-db-credentials,TSI_CREDS_SECRET_ID=tsi_creds,WU_API_KEY_SECRET_ID=wu_api_key" \
          --quiet